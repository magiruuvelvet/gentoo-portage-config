From b32715ba4104458a55bb18deed9c87ce0d05969d Mon Sep 17 00:00:00 2001
From: Wim Taymans <wtaymans@redhat.com>
Date: Tue, 27 Jun 2023 13:25:47 +0200
Subject: [PATCH] alsa: try to recover when mmap_begin fails

In case the get_avail call did not catch the device error, handle the
error and try to recover in the mmap_begin call instead.

See #3315
---
 spa/plugins/alsa/alsa-pcm.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/spa/plugins/alsa/alsa-pcm.c b/spa/plugins/alsa/alsa-pcm.c
index df32700a0..3abf3b6ef 100644
--- a/spa/plugins/alsa/alsa-pcm.c
+++ b/spa/plugins/alsa/alsa-pcm.c
@@ -2263,6 +2263,7 @@ again:
 		if (SPA_UNLIKELY((res = snd_pcm_mmap_begin(hndl, &my_areas, &offset, &frames)) < 0)) {
 			spa_log_error(state->log, "%s: snd_pcm_mmap_begin error: %s",
 					state->props.device, snd_strerror(res));
+			alsa_recover(state, res);
 			return res;
 		}
 		spa_log_trace_fp(state->log, "%p: begin offset:%ld avail:%ld threshold:%d",
@@ -2500,6 +2501,7 @@ int spa_alsa_read(struct state *state)
 		if ((res = snd_pcm_mmap_begin(hndl, &my_areas, &offset, &to_read)) < 0) {
 			spa_log_error(state->log, "%s: snd_pcm_mmap_begin error: %s",
 					state->props.device, snd_strerror(res));
+			alsa_recover(state, res);
 			return res;
 		}
 		spa_log_trace_fp(state->log, "%p: begin offs:%ld frames:%ld to_read:%ld thres:%d", state,
-- 
GitLab

