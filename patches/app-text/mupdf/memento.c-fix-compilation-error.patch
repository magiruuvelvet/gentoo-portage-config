diff --git a/source/fitz/memento.c b/source/fitz/memento.c
index 2fea386..b9cd814 100644
--- a/source/fitz/memento.c
+++ b/source/fitz/memento.c
@@ -2424,7 +2424,7 @@ char *Memento_strdup(const char *text)
     return ret;
 }
 
-int Memento_asprintf(char **ret, const char *format, ...)
+int Memento_asprintf(char **ret, const char *fmt, ...)
 {
     va_list va;
     int n;
@@ -2433,8 +2433,8 @@ int Memento_asprintf(char **ret, const char *format, ...)
     if (!memento.inited)
         Memento_init();
 
-    va_start(va, format);
-    n = vsnprintf(NULL, 0, format, va);
+    va_start(va, fmt);
+    n = vsnprintf(NULL, 0, fmt, va);
     va_end(va);
     if (n < 0)
         return n;
@@ -2445,14 +2445,14 @@ int Memento_asprintf(char **ret, const char *format, ...)
     if (*ret == NULL)
         return -1;
 
-    va_start(va, format);
-    n2 = vsnprintf(*ret, n + 1, format, va);
+    va_start(va, fmt);
+    n2 = vsnprintf(*ret, n + 1, fmt, va);
     va_end(va);
 
     return n2;
 }
 
-int Memento_vasprintf(char **ret, const char *format, va_list ap)
+int Memento_vasprintf(char **ret, const char *fmt, va_list ap)
 {
     int n;
     va_list ap2;
@@ -2461,7 +2461,7 @@ int Memento_vasprintf(char **ret, const char *format, va_list ap)
     if (!memento.inited)
         Memento_init();
 
-    n = vsnprintf(NULL, 0, format, ap);
+    n = vsnprintf(NULL, 0, fmt, ap);
     if (n < 0) {
         va_end(ap2);
         return n;
@@ -2475,7 +2475,7 @@ int Memento_vasprintf(char **ret, const char *format, va_list ap)
         return -1;
     }
 
-    n = vsnprintf(*ret, n + 1, format, ap2);
+    n = vsnprintf(*ret, n + 1, fmt, ap2);
     va_end(ap2);
 
     return n;
@@ -3525,6 +3525,9 @@ void *(Memento_reference)(void *a)
 #undef Memento_realloc
 #undef Memento_calloc
 #undef Memento_strdup
+#undef Memento_asprintf
+#undef Memento_vasprintf
+
 
 void *Memento_malloc(size_t size)
 {
@@ -3559,14 +3562,14 @@ char *Memento_strdup(const char *s)
 
 /* Avoid calling asprintf, in case our compiler doesn't support it.
  * Vaguely unhappy about relying on vsnprintf, but... */
-int Memento_asprintf(char **ret, const char *format, ...)
+int Memento_asprintf(char **ret, const char *fmt, ...)
 {
     va_list va;
     int n;
     int n2;
 
-    va_start(va, format);
-    n = vsnprintf(NULL, 0, format, va);
+    va_start(va, fmt);
+    n = vsnprintf(NULL, 0, fmt, va);
     va_end(va);
     if (n < 0)
         return n;
@@ -3575,8 +3578,8 @@ int Memento_asprintf(char **ret, const char *format, ...)
     if (*ret == NULL)
         return -1;
 
-    va_start(va, format);
-    n2 = vsnprintf(*ret, n + 1, format, va);
+    va_start(va, fmt);
+    n2 = vsnprintf(*ret, n + 1, fmt, va);
     va_end(va);
 
     return n2;
@@ -3584,13 +3587,13 @@ int Memento_asprintf(char **ret, const char *format, ...)
 
 /* Avoid calling vasprintf, in case our compiler doesn't support it.
  * Vaguely unhappy about relying on vsnprintf, but... */
-int Memento_vasprintf(char **ret, const char *format, va_list ap)
+int Memento_vasprintf(char **ret, const char *fmt, va_list ap)
 {
     int n;
     va_list ap2;
     va_copy(ap2, ap);
 
-    n = vsnprintf(NULL, 0, format, ap);
+    n = vsnprintf(NULL, 0, fmt, ap);
     if (n < 0) {
         va_end(ap2);
         return n;
@@ -3602,7 +3605,7 @@ int Memento_vasprintf(char **ret, const char *format, va_list ap)
         return -1;
     }
 
-    n = vsnprintf(*ret, n + 1, format, ap2);
+    n = vsnprintf(*ret, n + 1, fmt, ap2);
     va_end(ap2);
 
     return n;
