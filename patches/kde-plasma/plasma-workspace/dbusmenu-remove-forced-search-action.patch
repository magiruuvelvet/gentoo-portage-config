diff --git a/applets/appmenu/plugin/appmenumodel.cpp b/applets/appmenu/plugin/appmenumodel.cpp
index 99263b3..1e9532f 100644
--- a/applets/appmenu/plugin/appmenumodel.cpp
+++ b/applets/appmenu/plugin/appmenumodel.cpp
@@ -78,38 +78,7 @@ AppMenuModel::AppMenuModel(QObject *parent)
         }
     });
 
-    // X11 has funky menu behaviour that prevents this from working properly.
-    if (KWindowSystem::isPlatformWayland()) {
-        m_searchAction = new QAction(this);
-        m_searchAction->setText(i18n("Search"));
-        m_searchAction->setObjectName(QStringLiteral("appmenu"));
-
-        m_searchMenu.reset(new QMenu);
-        auto searchAction = new QWidgetAction(this);
-        auto searchBar = new QLineEdit;
-        searchBar->setClearButtonEnabled(true);
-        searchBar->setPlaceholderText(i18n("Searchâ€¦"));
-        searchBar->setMinimumWidth(200);
-        searchBar->setContentsMargins(4, 4, 4, 4);
-        connect(m_tasksModel, &TaskManager::TasksModel::activeTaskChanged, searchBar, [searchBar]() {
-            searchBar->setText(QString());
-        });
-        connect(searchBar, &QLineEdit::textChanged, this, [searchBar, this]() mutable {
-            insertSearchActionsIntoMenu(searchBar->text());
-        });
-        connect(searchBar, &QLineEdit::returnPressed, this, [this]() mutable {
-            if (!m_currentSearchActions.empty()) {
-                m_currentSearchActions.constFirst()->trigger();
-            }
-        });
-        connect(this, &AppMenuModel::modelNeedsUpdate, searchBar, [this, searchBar]() mutable {
-            insertSearchActionsIntoMenu(searchBar->text());
-        });
-        searchAction->setDefaultWidget(searchBar);
-        m_searchMenu->addAction(searchAction);
-        m_searchMenu->addSeparator();
-        m_searchAction->setMenu(m_searchMenu.get());
-    }
+    m_searchAction = nullptr;
 }
 
 AppMenuModel::~AppMenuModel() = default;
@@ -163,25 +132,10 @@ int AppMenuModel::rowCount(const QModelIndex &parent) const
 
 void AppMenuModel::removeSearchActionsFromMenu()
 {
-    for (auto action : std::as_const(m_currentSearchActions)) {
-        m_searchAction->menu()->removeAction(action);
-    }
-    m_currentSearchActions = QList<QAction *>();
 }
 
 void AppMenuModel::insertSearchActionsIntoMenu(const QString &filter)
 {
-    removeSearchActionsFromMenu();
-    if (filter.isEmpty()) {
-        return;
-    }
-    const auto actions = flatActionList();
-    for (const auto &action : actions) {
-        if (action->text().contains(filter, Qt::CaseInsensitive)) {
-            m_searchAction->menu()->addAction(action);
-            m_currentSearchActions << action;
-        }
-    }
 }
 
 void AppMenuModel::update()
