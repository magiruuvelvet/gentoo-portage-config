From e19f6f4ee21ce3d191986a7c0440a17067a3b3ee Mon Sep 17 00:00:00 2001
From: Vlad Zahorodnii <vlad.zahorodnii@kde.org>
Date: Thu, 19 Sep 2024 16:29:29 +0300
Subject: [PATCH] wayland: Cache size hints in XdgToplevelWindow

This is to make XdgToplevelWindow code less crashy if somebody checks
whether a closed window is resizable, etc.
---
 src/wayland/xdgshell.cpp | 3 +--
 src/xdgshellwindow.cpp   | 8 ++++++--
 src/xdgshellwindow.h     | 2 ++
 3 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/src/wayland/xdgshell_interface.cpp b/src/wayland/xdgshell_interface.cpp
index afe54e54cba..752886096b9 100644
--- a/src/wayland/xdgshell_interface.cpp
+++ b/src/wayland/xdgshell_interface.cpp
@@ -584,8 +584,7 @@ QSize XdgToplevelInterface::minimumSize() const
 
 QSize XdgToplevelInterface::maximumSize() const
 {
-    return QSize(d->maximumSize.width() > 0 ? d->maximumSize.width() : INT_MAX,
-                 d->maximumSize.height() > 0 ? d->maximumSize.height() : INT_MAX);
+    return d->maximumSize;
 }
 
 quint32 XdgToplevelInterface::sendConfigure(const QSize &size, const States &states)
diff --git a/src/xdgshellwindow.cpp b/src/xdgshellwindow.cpp
index 10ca27896c6..2fc572c10eb 100644
--- a/src/xdgshellwindow.cpp
+++ b/src/xdgshellwindow.cpp
@@ -521,14 +521,16 @@ MaximizeMode XdgToplevelWindow::requestedMaximizeMode() const
 QSizeF XdgToplevelWindow::minSize() const
 {
     const int enforcedMinimum = m_nextDecoration ? 150 : 20;
-    return rules()->checkMinSize(m_shellSurface->minimumSize()).expandedTo(QSizeF(enforcedMinimum, enforcedMinimum));
+    return rules()->checkMinSize(m_minimumSize).expandedTo(QSizeF(enforcedMinimum, enforcedMinimum));
 }
 
 QSizeF XdgToplevelWindow::maxSize() const
 {
     // enforce the same minimum as for minSize, so that maxSize is always bigger than minSize
     const int enforcedMinimum = m_nextDecoration ? 150 : 20;
-    return rules()->checkMaxSize(m_shellSurface->maximumSize()).expandedTo(QSizeF(enforcedMinimum, enforcedMinimum));
+    return rules()->checkMaxSize(QSizeF(m_maximumSize.width() > 0 ? m_maximumSize.width() : INT_MAX,
+                                        m_maximumSize.height() > 0 ? m_maximumSize.height() : INT_MAX))
+        .expandedTo(QSizeF(enforcedMinimum, enforcedMinimum));
 }
 
 bool XdgToplevelWindow::isFullScreen() const
@@ -1218,12 +1220,14 @@ void XdgToplevelWindow::handlePongReceived(quint32 serial)
 
 void XdgToplevelWindow::handleMaximumSizeChanged()
 {
+    m_minimumSize = m_shellSurface->minimumSize();
     updateCapabilities();
     Q_EMIT maximizeableChanged(isMaximizable());
 }
 
 void XdgToplevelWindow::handleMinimumSizeChanged()
 {
+    m_maximumSize = m_shellSurface->maximumSize();
     updateCapabilities();
     Q_EMIT maximizeableChanged(isMaximizable());
 }
diff --git a/src/xdgshellwindow.h b/src/xdgshellwindow.h
index 28be41f9f17..a23571e77d5 100644
--- a/src/xdgshellwindow.h
+++ b/src/xdgshellwindow.h
@@ -227,6 +227,8 @@ private:
     QMap<quint32, PingReason> m_pings;
     MaximizeMode m_maximizeMode = MaximizeRestore;
     MaximizeMode m_requestedMaximizeMode = MaximizeRestore;
+    QSizeF m_minimumSize = QSizeF(0, 0);
+    QSizeF m_maximumSize = QSizeF(0, 0);
     bool m_isFullScreen = false;
     bool m_isRequestedFullScreen = false;
     bool m_isInitialized = false;
-- 
GitLab

