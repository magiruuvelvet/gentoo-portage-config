diff --git a/src/wayland/xdgshell_interface.cpp b/src/wayland/xdgshell_interface.cpp
index f1d74b8..b005823 100644
--- a/src/wayland/xdgshell_interface.cpp
+++ b/src/wayland/xdgshell_interface.cpp
@@ -533,7 +533,7 @@ QSize XdgToplevelInterface::minimumSize() const
 
 QSize XdgToplevelInterface::maximumSize() const
 {
-    return d->current.maximumSize.isEmpty() ? QSize(INT_MAX, INT_MAX) : d->current.maximumSize;
+    return d->current.maximumSize.isEmpty() ? QSize(INT_MAX, INT_MAX) : d->current.maximumSize;
 }
 
 quint32 XdgToplevelInterface::sendConfigure(const QSize &size, const States &states)
diff --git a/src/xdgshellwindow.cpp b/src/xdgshellwindow.cpp
index 525481f..0aa3431 100644
--- a/src/xdgshellwindow.cpp
+++ b/src/xdgshellwindow.cpp
@@ -601,14 +601,16 @@ MaximizeMode XdgToplevelWindow::requestedMaximizeMode() const
 QSizeF XdgToplevelWindow::minSize() const
 {
     const int enforcedMinimum = m_nextDecoration ? 150 : 20;
-    return rules()->checkMinSize(m_shellSurface->minimumSize()).expandedTo(QSizeF(enforcedMinimum, enforcedMinimum));
+    return rules()->checkMinSize(m_minimumSize).expandedTo(QSizeF(enforcedMinimum, enforcedMinimum));
 }
 
 QSizeF XdgToplevelWindow::maxSize() const
 {
     // enforce the same minimum as for minSize, so that maxSize is always bigger than minSize
     const int enforcedMinimum = m_nextDecoration ? 150 : 20;
-    return rules()->checkMaxSize(m_shellSurface->maximumSize()).expandedTo(QSizeF(enforcedMinimum, enforcedMinimum));
+    return rules()->checkMaxSize(QSizeF(m_maximumSize.width() > 0 ? m_maximumSize.width() : INT_MAX,
+                                        m_maximumSize.height() > 0 ? m_maximumSize.height() : INT_MAX))
+        .expandedTo(QSizeF(enforcedMinimum, enforcedMinimum));
 }
 
 bool XdgToplevelWindow::isFullScreen() const
@@ -1296,11 +1298,13 @@ void XdgToplevelWindow::handlePongReceived(quint32 serial)
 
 void XdgToplevelWindow::handleMaximumSizeChanged()
 {
+    m_minimumSize = m_shellSurface->minimumSize();
     Q_EMIT maximizeableChanged(isMaximizable());
 }
 
 void XdgToplevelWindow::handleMinimumSizeChanged()
 {
+    m_maximumSize = m_shellSurface->maximumSize();
     Q_EMIT maximizeableChanged(isMaximizable());
 }
 
diff --git a/src/xdgshellwindow.h b/src/xdgshellwindow.h
index 6f1d1aa..e5f97e0 100644
--- a/src/xdgshellwindow.h
+++ b/src/xdgshellwindow.h
@@ -227,6 +227,8 @@ private:
     QMap<quint32, PingReason> m_pings;
     MaximizeMode m_maximizeMode = MaximizeRestore;
     MaximizeMode m_requestedMaximizeMode = MaximizeRestore;
+    QSizeF m_minimumSize = QSizeF(0, 0);
+    QSizeF m_maximumSize = QSizeF(0, 0);
     bool m_isFullScreen = false;
     bool m_isRequestedFullScreen = false;
     bool m_isInitialized = false;
