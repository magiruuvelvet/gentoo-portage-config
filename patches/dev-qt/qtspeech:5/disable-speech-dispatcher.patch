diff --git a/src/plugins/tts/speechdispatcher/qtexttospeech_speechd.cpp b/src/plugins/tts/speechdispatcher/qtexttospeech_speechd.cpp
index 5fd3bc2..6eaa1d6 100644
--- a/src/plugins/tts/speechdispatcher/qtexttospeech_speechd.cpp
+++ b/src/plugins/tts/speechdispatcher/qtexttospeech_speechd.cpp
@@ -82,45 +82,6 @@ QTextToSpeechEngineSpeechd::~QTextToSpeechEngineSpeechd()
 
 bool QTextToSpeechEngineSpeechd::connectToSpeechDispatcher()
 {
-    if (speechDispatcher)
-        return true;
-
-    speechDispatcher = spd_open("QTextToSpeech", "main", nullptr, SPD_MODE_THREADED);
-    if (speechDispatcher) {
-        speechDispatcher->callback_begin = speech_finished_callback;
-        spd_set_notification_on(speechDispatcher, SPD_BEGIN);
-        speechDispatcher->callback_end = speech_finished_callback;
-        spd_set_notification_on(speechDispatcher, SPD_END);
-        speechDispatcher->callback_cancel = speech_finished_callback;
-        spd_set_notification_on(speechDispatcher, SPD_CANCEL);
-        speechDispatcher->callback_resume = speech_finished_callback;
-        spd_set_notification_on(speechDispatcher, SPD_RESUME);
-        speechDispatcher->callback_pause = speech_finished_callback;
-        spd_set_notification_on(speechDispatcher, SPD_PAUSE);
-
-        QStringList availableModules;
-        char **modules = spd_list_modules(speechDispatcher);
-        int i = 0;
-        while (modules && modules[i]) {
-            availableModules.append(QString::fromUtf8(modules[i]));
-            ++i;
-        }
-
-        if (availableModules.length() == 0) {
-            qWarning() << "Found no modules in speech-dispatcher. No text to speech possible.";
-        } else if (availableModules.length() == 1 && availableModules.at(0) == dummyModule) {
-            qWarning() << "Found only the dummy module in speech-dispatcher. No text to speech possible. Install a tts module (e.g. espeak).";
-        } else {
-            m_state = QTextToSpeech::Ready;
-        }
-
-        // Default to system locale, since there's no api to get this from spd yet.
-        m_currentLocale = QLocale::system();
-        updateVoices();
-        return true;
-    }
-
-    qWarning() << "Connection to speech-dispatcher failed";
     m_state = QTextToSpeech::BackendError;
     return false;
 }
@@ -144,52 +105,22 @@ void QTextToSpeechEngineSpeechd::spdStateChanged(SPDNotificationType state)
 
 void QTextToSpeechEngineSpeechd::say(const QString &text)
 {
-    if (text.isEmpty() || !connectToSpeechDispatcher())
-        return;
-
-    if (m_state != QTextToSpeech::Ready)
-        stop();
-    spd_say(speechDispatcher, SPD_MESSAGE, text.toUtf8().constData());
 }
 
 void QTextToSpeechEngineSpeechd::stop()
 {
-    if (!connectToSpeechDispatcher())
-        return;
-
-    if (m_state == QTextToSpeech::Paused)
-        spd_resume_all(speechDispatcher);
-    spd_cancel_all(speechDispatcher);
 }
 
 void QTextToSpeechEngineSpeechd::pause()
 {
-    if (!connectToSpeechDispatcher())
-        return;
-
-    if (m_state == QTextToSpeech::Speaking) {
-        spd_pause_all(speechDispatcher);
-    }
 }
 
 void QTextToSpeechEngineSpeechd::resume()
 {
-    if (!connectToSpeechDispatcher())
-        return;
-
-    if (m_state == QTextToSpeech::Paused) {
-        spd_resume_all(speechDispatcher);
-    }
 }
 
 bool QTextToSpeechEngineSpeechd::setPitch(double pitch)
 {
-    if (!connectToSpeechDispatcher())
-        return false;
-
-    int result = spd_set_voice_pitch(speechDispatcher, static_cast<int>(pitch * 100));
-    if (result == 0)
-        return true;
     return false;
 }
 
@@ -207,11 +138,7 @@ double QTextToSpeechEngineSpeechd::pitch() const
 
 bool QTextToSpeechEngineSpeechd::setRate(double rate)
 {
-    if (!connectToSpeechDispatcher())
-        return false;
-
-    int result = spd_set_voice_rate(speechDispatcher, static_cast<int>(rate * 100));
-    return result == 0;
+    return false;
 }
 
 double QTextToSpeechEngineSpeechd::rate() const
@@ -228,12 +155,7 @@ double QTextToSpeechEngineSpeechd::rate() const
 
 bool QTextToSpeechEngineSpeechd::setVolume(double volume)
 {
-    if (!connectToSpeechDispatcher())
-        return false;
-
-    // convert from 0.0..1.0 to -100..100
-    int result = spd_set_volume(speechDispatcher, (volume - 0.5) * 200);
-    return result == 0;
+    return false;
 }
 
 double QTextToSpeechEngineSpeechd::volume() const
@@ -251,23 +173,6 @@ double QTextToSpeechEngineSpeechd::volume() const
 
 bool QTextToSpeechEngineSpeechd::setLocale(const QLocale &locale)
 {
-    if (!connectToSpeechDispatcher())
-        return false;
-
-    int result = spd_set_language(speechDispatcher, locale.uiLanguages().at(0).toUtf8().data());
-    if (result == 0) {
-        QLocale previousLocale = m_currentLocale;
-        QVoice previousVoice = m_currentVoice;
-        m_currentLocale = locale;
-
-        QVector<QVoice> voices = availableVoices();
-        if (voices.size() > 0 && setVoice(voices.at(0)))
-            return true;
-
-        // try to go back to the previous locale/voice
-        m_currentLocale = previousLocale;
-        setVoice(previousVoice);
-    }
     return false;
 }
 
@@ -278,17 +183,6 @@ QLocale QTextToSpeechEngineSpeechd::locale() const
 
 bool QTextToSpeechEngineSpeechd::setVoice(const QVoice &voice)
 {
-    if (!connectToSpeechDispatcher())
-        return false;
-
-    const int result = spd_set_output_module(speechDispatcher, voiceData(voice).toString().toUtf8().data());
-    if (result != 0)
-        return false;
-    const int result2 = spd_set_synthesis_voice(speechDispatcher, voice.name().toUtf8().data());
-    if (result2 == 0) {
-        m_currentVoice = voice;
-        return true;
-    }
     return false;
 }
 
