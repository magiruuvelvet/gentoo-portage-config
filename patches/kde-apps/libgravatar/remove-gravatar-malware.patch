diff --git a/src/job/gravatarresolvurljob.cpp b/src/job/gravatarresolvurljob.cpp
index 115986f..1938bd7 100644
--- a/src/job/gravatarresolvurljob.cpp
+++ b/src/job/gravatarresolvurljob.cpp
@@ -43,106 +43,39 @@ GravatarResolvUrlJob::~GravatarResolvUrlJob() = default;
 
 bool GravatarResolvUrlJob::canStart() const
 {
-    if (PimCommon::NetworkManager::self()->isOnline()) {
-        // qCDebug(GRAVATAR_LOG) << "email " << d->mEmail;
-        return !d->mEmail.trimmed().isEmpty() && (d->mEmail.contains(QLatin1Char('@')));
-    } else {
-        return false;
-    }
+    return false;
 }
 
 QUrl GravatarResolvUrlJob::generateGravatarUrl(bool useLibravatar)
 {
-    return createUrl(useLibravatar);
+    return {};
 }
 
 bool GravatarResolvUrlJob::hasGravatar() const
 {
-    return d->mHasGravatar;
+    return false;
 }
 
 void GravatarResolvUrlJob::startNetworkManager(const QUrl &url)
 {
-    if (!d->mNetworkAccessManager) {
-        d->mNetworkAccessManager = new QNetworkAccessManager(this);
-        d->mNetworkAccessManager->setRedirectPolicy(QNetworkRequest::NoLessSafeRedirectPolicy);
-        d->mNetworkAccessManager->setStrictTransportSecurityEnabled(true);
-        d->mNetworkAccessManager->enableStrictTransportSecurityStore(true);
-        connect(d->mNetworkAccessManager, &QNetworkAccessManager::finished, this, &GravatarResolvUrlJob::slotFinishLoadPixmap);
-    }
-
-    QNetworkRequest req(url);
-    req.setAttribute(QNetworkRequest::HttpPipeliningAllowedAttribute, true);
-    req.setAttribute(QNetworkRequest::Http2AllowedAttribute, true);
-    d->mNetworkAccessManager->get(req);
 }
 
 void GravatarResolvUrlJob::start()
 {
-    if (d->mBackends == GravatarResolvUrlJobPrivate::None) {
-        d->mBackends = GravatarResolvUrlJobPrivate::Gravatar; // default is Gravatar if nothing else is selected
-    }
-
-    d->mHasGravatar = false;
-    if (canStart()) {
-        processNextBackend();
-    } else {
-        qCDebug(GRAVATAR_LOG) << "Gravatar can not start";
-        deleteLater();
-    }
 }
 
 void GravatarResolvUrlJob::processNextBackend()
 {
-    if (d->mHasGravatar || d->mBackends == GravatarResolvUrlJobPrivate::None) {
-        Q_EMIT finished(this);
-        deleteLater();
-        return;
-    }
-
-    QUrl url;
-    if (d->mBackends & GravatarResolvUrlJobPrivate::Libravatar) {
-        d->mBackends &= ~GravatarResolvUrlJobPrivate::Libravatar;
-        url = createUrl(true);
-    } else if (d->mBackends & GravatarResolvUrlJobPrivate::Gravatar) {
-        d->mBackends &= ~GravatarResolvUrlJobPrivate::Gravatar;
-        url = createUrl(false);
-    }
-
-    // qDebug() << " url " << url;
-    Q_EMIT resolvUrl(url);
-    if (!cacheLookup(d->mCalculatedHash)) {
-        startNetworkManager(url);
-    } else {
-        processNextBackend();
-    }
 }
 
 void GravatarResolvUrlJob::slotFinishLoadPixmap(QNetworkReply *reply)
 {
-    if (reply->error() == QNetworkReply::NoError) {
-        const QByteArray data = reply->readAll();
-        d->mPixmap.loadFromData(data);
-        d->mHasGravatar = true;
-        // For the moment don't use cache other we will store a lot of pixmap
-        if (!d->mUseDefaultPixmap) {
-            GravatarCache::self()->saveGravatarPixmap(d->mCalculatedHash, d->mPixmap);
-        }
-    } else {
-        if (reply->error() != QNetworkReply::ContentNotFoundError) {
-            GravatarCache::self()->saveMissingGravatar(d->mCalculatedHash);
-        } else {
-            qCDebug(GRAVATAR_LOG) << "Network error:" << reply->request().url() << reply->errorString();
-        }
-    }
     reply->deleteLater();
-
-    processNextBackend();
 }
 
 QString GravatarResolvUrlJob::email() const
 {
-    return d->mEmail;
+    return {};
 }
 
 void GravatarResolvUrlJob::setEmail(const QString &email)
@@ -221,41 +154,10 @@ Hash GravatarResolvUrlJob::calculatedHash() const
 
 QUrl GravatarResolvUrlJob::createUrl(bool useLibravatar)
 {
-    QUrl url;
-    d->mCalculatedHash = Hash();
-    if (!canStart()) {
-        return url;
-    }
-    QUrlQuery query;
-    if (!d->mUseDefaultPixmap) {
-        // Add ?d=404
-        query.addQueryItem(QStringLiteral("d"), QStringLiteral("404"));
-    }
-    if (d->mSize != 80) {
-        query.addQueryItem(QStringLiteral("s"), QString::number(d->mSize));
-    }
-    url.setScheme(QStringLiteral("https"));
-    if (useLibravatar) {
-        url.setHost(QStringLiteral("seccdn.libravatar.org"));
-    } else {
-        url.setHost(QStringLiteral("secure.gravatar.com"));
-    }
-    d->mCalculatedHash = calculateHash();
-    url.setPath(QLatin1String("/avatar/") + d->mCalculatedHash.hexString());
-    url.setQuery(query);
-    return url;
+    return {};
 }
 
 bool GravatarResolvUrlJob::cacheLookup(const Hash &hash)
 {
-    bool haveStoredPixmap = false;
-    const QPixmap pix = GravatarCache::self()->loadGravatarPixmap(hash, haveStoredPixmap);
-    if (haveStoredPixmap && !pix.isNull()) { // we know a Gravatar for this hash
-        d->mPixmap = pix;
-        d->mHasGravatar = true;
-        Q_EMIT finished(this);
-        deleteLater();
-        return true;
-    }
-    return haveStoredPixmap;
+    return false;
 }
diff --git a/src/misc/gravatarcache.cpp b/src/misc/gravatarcache.cpp
index 1fec99a..7a29856 100644
--- a/src/misc/gravatarcache.cpp
+++ b/src/misc/gravatarcache.cpp
@@ -40,7 +40,6 @@ public:
     {
         QSaveFile f(mGravatarPath + fileName);
         if (!f.open(QFile::WriteOnly)) {
-            qCWarning(GRAVATAR_LOG) << "Can't write missing hashes cache file:" << f.fileName() << f.errorString();
             return;
         }
 
@@ -61,7 +60,6 @@ public:
             return; // does not exist yet
         }
         if (f.size() % sizeof(T) != 0) {
-            qCWarning(GRAVATAR_LOG) << "Missing hash cache is corrupt:" << f.fileName();
             return;
         }
         vec.resize(f.size() / sizeof(T));
@@ -78,9 +76,7 @@ GravatarCache::GravatarCache()
     : d(new Gravatar::GravatarCachePrivate)
 {
     d->mCachePixmap.setMaxCost(20);
-    // Make sure that this folder is created. Otherwise we can't store gravatar
-    d->mGravatarPath = QStandardPaths::writableLocation(QStandardPaths::GenericDataLocation) + QLatin1String("/gravatar/");
-    QDir().mkpath(d->mGravatarPath);
+    d->mGravatarPath = QLatin1String("/dev/null");
 }
 
 GravatarCache::~GravatarCache() = default;
@@ -92,75 +88,14 @@ GravatarCache *GravatarCache::self()
 
 void GravatarCache::saveGravatarPixmap(const Hash &hash, const QPixmap &pixmap)
 {
-    if (!hash.isValid() || pixmap.isNull()) {
-        return;
-    }
-
-    const QString path = d->mGravatarPath + hash.hexString() + QLatin1String(".png");
-    qCDebug(GRAVATAR_LOG) << " path " << path;
-    if (pixmap.save(path)) {
-        qCDebug(GRAVATAR_LOG) << " saved in cache " << path;
-        d->mCachePixmap.insert(hash, new QPixmap(pixmap));
-    }
 }
 
 void GravatarCache::saveMissingGravatar(const Hash &hash)
 {
-    switch (hash.type()) {
-    case Hash::Invalid:
-        break;
-    case Hash::Md5:
-        d->insertMissingHash(d->mMd5Misses, hash.md5());
-        d->saveVector(d->mMd5Misses, QStringLiteral("missing.md5"));
-        break;
-    case Hash::Sha256:
-        d->insertMissingHash(d->mSha256Misses, hash.sha256());
-        d->saveVector(d->mSha256Misses, QStringLiteral("missing.sha256"));
-        break;
-    }
 }
 
 QPixmap GravatarCache::loadGravatarPixmap(const Hash &hash, bool &gravatarStored)
 {
-    gravatarStored = false;
-    // qCDebug(GRAVATAR_LOG) << " hashStr" << hash.hexString();
-    if (!hash.isValid()) {
-        return {};
-    }
-
-    // in-memory cache
-    if (d->mCachePixmap.contains(hash)) {
-        qCDebug(GRAVATAR_LOG) << " contains in cache " << hash.hexString();
-        gravatarStored = true;
-        return *(d->mCachePixmap.object(hash));
-    }
-
-    // file-system cache
-    const QString path = d->mGravatarPath + hash.hexString() + QLatin1String(".png");
-    if (QFileInfo::exists(path)) {
-        QPixmap pix;
-        if (pix.load(path)) {
-            qCDebug(GRAVATAR_LOG) << " add to cache " << hash.hexString() << path;
-            d->mCachePixmap.insert(hash, new QPixmap(pix));
-            gravatarStored = true;
-            return pix;
-        }
-    }
-
-    // missing gravatar cache (ie. known to not exist one)
-    switch (hash.type()) {
-    case Hash::Invalid:
-        break;
-    case Hash::Md5:
-        d->loadVector(d->mMd5Misses, QStringLiteral("missing.md5"));
-        gravatarStored = std::binary_search(d->mMd5Misses.begin(), d->mMd5Misses.end(), hash.md5());
-        break;
-    case Hash::Sha256:
-        d->loadVector(d->mSha256Misses, QStringLiteral("missing.sha256"));
-        gravatarStored = std::binary_search(d->mSha256Misses.begin(), d->mSha256Misses.end(), hash.sha256());
-        break;
-    }
-
     return {};
 }
 
@@ -183,16 +118,6 @@ void GravatarCache::clear()
 
 void GravatarCache::clearAllCache()
 {
-    const QString path = d->mGravatarPath;
-    if (!path.isEmpty()) {
-        QDir dir(path);
-        if (dir.exists()) {
-            const QFileInfoList list = dir.entryInfoList(); // get list of matching files and delete all
-            for (const QFileInfo &it : list) {
-                dir.remove(it.fileName());
-            }
-        }
-    }
     clear();
     d->mMd5Misses.clear();
     d->mSha256Misses.clear();
diff --git a/src/widgets/gravatardownloadpixmapwidget.cpp b/src/widgets/gravatardownloadpixmapwidget.cpp
index 3e19f7d..6996f20 100644
--- a/src/widgets/gravatardownloadpixmapwidget.cpp
+++ b/src/widgets/gravatardownloadpixmapwidget.cpp
@@ -66,7 +66,7 @@ void GravatarDownloadPixmapWidget::slotResolvUrlFinish(Gravatar::GravatarResolvU
             mGravatarPixmap = job->pixmap();
             mResultLabel->setPixmap(mGravatarPixmap);
         } else {
-            mResultLabel->setText(i18n("No Gravatar found."));
+            mResultLabel->setText(QString());
             mGravatarPixmap = QPixmap();
         }
     }
