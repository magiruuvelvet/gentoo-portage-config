diff --git a/resources/imap/settingspasswordrequester.cpp b/resources/imap/settingspasswordrequester.cpp
index f82d16a..5736aed 100644
--- a/resources/imap/settingspasswordrequester.cpp
+++ b/resources/imap/settingspasswordrequester.cpp
@@ -68,42 +68,11 @@ void SettingsPasswordRequester::requestPassword(RequestType request, const QStri
 
 void SettingsPasswordRequester::askUserInput(const QString &serverError)
 {
-    auto notification = new KNotification(QStringLiteral("imapAuthFailed"), KNotification::Persistent);
-    notification->setComponentName(QStringLiteral("akonadi_imap_resource"));
-    notification->setIconName(QStringLiteral("network-server"));
-    notification->setTitle(i18nc("@title", "An IMAP e-mail account needs your attention."));
-
-    const auto accountName = m_resource->name();
-    const auto message = accountName.isEmpty() ? i18n(
-                                                     "The IMAP server refused the supplied username and password.\n"
-                                                     "Do you want to try again, or open the settings?\n\n"
-                                                     "%1",
-                                                     serverError)
-                                               : i18n(
-                                                     "The IMAP server for account %1 refused the supplied username and password.\n"
-                                                     "Do you want to try again, or open the settings?\n\n"
-                                                     "%2",
-                                                     accountName,
-                                                     serverError);
-    notification->setText(message);
-
-    auto tryAgainAction = notification->addAction(i18nc("@action:button", "Try again"));
-    connect(tryAgainAction, &KNotificationAction::activated, this, [this, notification]() {
-        disconnect(notification, &KNotification::closed, nullptr, nullptr);
-        slotTryAgainClicked();
-    });
-
-    auto openSettingsAction = notification->addAction(i18nc("@action:button", "Open settings"));
-    connect(openSettingsAction, &KNotificationAction::activated, this, [this, notification]() {
-        disconnect(notification, &KNotification::closed, nullptr, nullptr);
-        slotOpenSettingsClicked();
-    });
-
-    connect(notification, &KNotification::closed, this, [this] {
-        Q_EMIT done(UserRejected);
-    });
-
-    notification->sendEvent();
+    // just silently try again with the current password
+    // because the password can't suddenly change for no reason
+    // either the request was rate limited or timed out, which
+    // than hits this function because it thinks the password is wrong
+    Q_EMIT done(PasswordRetrieved, m_resource->settings()->password());
 }
 
 void SettingsPasswordRequester::slotTryAgainClicked()
