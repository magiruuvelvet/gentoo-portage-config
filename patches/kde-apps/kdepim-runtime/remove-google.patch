diff --git a/resources/google-groupware/calendarhandler.cpp b/resources/google-groupware/calendarhandler.cpp
index a0b44cd..9571ae5 100644
--- a/resources/google-groupware/calendarhandler.cpp
+++ b/resources/google-groupware/calendarhandler.cpp
@@ -360,7 +360,7 @@ void FreeBusyHandler::retrieveFreeBusy(const QString &email, const QDateTime &st
         }
 
         KCalendarCore::FreeBusy::Ptr fb(new KCalendarCore::FreeBusy);
-        fb->setUid(QStringLiteral("%1%2@google.com").arg(QDateTime::currentDateTimeUtc().toString(QStringLiteral("yyyyMMddTHHmmssZ"))));
+        fb->setUid(QStringLiteral("%1%2@nothanks.invalid").arg(QDateTime::currentDateTimeUtc().toString(QStringLiteral("yyyyMMddTHHmmssZ"))));
         fb->setOrganizer(job->account()->accountName());
         fb->addAttendee(KCalendarCore::Attendee(QString(), queryJob->id()));
         // FIXME: is it really sort?
diff --git a/resources/google-groupware/contacthandler.cpp b/resources/google-groupware/contacthandler.cpp
index 203c7ca..f6422f4 100644
--- a/resources/google-groupware/contacthandler.cpp
+++ b/resources/google-groupware/contacthandler.cpp
@@ -58,8 +58,7 @@ bool ContactHandler::canPerformTask(const Item::List &items)
 
 QString ContactHandler::myContactsRemoteId() const
 {
-    return QStringLiteral("http://www.google.com/m8/feeds/groups/%1/base/6")
-        .arg(QString::fromLatin1(QUrl::toPercentEncoding(m_settings->accountPtr()->accountName())));
+    return {};
 }
 
 void ContactHandler::setupCollection(Collection &collection, const ContactsGroupPtr &group)
diff --git a/resources/google-groupware/googleresource.cpp b/resources/google-groupware/googleresource.cpp
index 62b08fa..c730379 100644
--- a/resources/google-groupware/googleresource.cpp
+++ b/resources/google-groupware/googleresource.cpp
@@ -144,7 +144,6 @@ void GoogleResource::configure(WId windowId)
         Q_EMIT configurationDialogAccepted();
 
         if (m_settings->accountPtr().isNull()) {
-            Q_EMIT status(NotConfigured, i18n("Configured account does not exist"));
             m_isConfiguring = false;
             return;
         }
@@ -174,18 +173,10 @@ QList<QUrl> GoogleResource::scopes() const
 
 void GoogleResource::updateResourceName()
 {
-    const QString accountName = m_settings->account();
-    setName(i18nc("%1 is account name (user@gmail.com)", "Google Groupware (%1)", accountName.isEmpty() ? i18n("not configured") : accountName));
 }
 
 void GoogleResource::reloadConfig()
 {
-    const AccountPtr account = m_settings->accountPtr();
-    if (account.isNull() || account->accountName().isEmpty()) {
-        Q_EMIT status(NotConfigured, i18n("Configured account does not exist"));
-    } else {
-        emitReadyStatus();
-    }
 }
 
 bool GoogleResource::handleError(KGAPI2::Job *job, bool _cancelTask)
@@ -254,13 +245,7 @@ void GoogleResource::requestAuthenticationFromUser(const KGAPI2::AccountPtr &acc
 
 bool GoogleResource::canPerformTask()
 {
-    if (!m_settings->accountPtr() && accountId() == 0) {
-        cancelTask(i18nc("@info:status", "Resource is not configured"));
-        Q_EMIT status(NotConfigured, i18nc("@info:status", "Resource is not configured"));
-        return false;
-    }
-
-    return true;
+    return false;
 }
 
 void GoogleResource::slotAuthJobFinished(KGAPI2::Job *job)
diff --git a/resources/google-groupware/googlesettings.cpp b/resources/google-groupware/googlesettings.cpp
index e8fb183..1e6b7fa 100644
--- a/resources/google-groupware/googlesettings.cpp
+++ b/resources/google-groupware/googlesettings.cpp
@@ -131,17 +131,17 @@ void GoogleSettings::addTaskList(const QString &taskList)
 
 QString GoogleSettings::clientId() const
 {
-    return QStringLiteral("554041944266.apps.googleusercontent.com");
+    return {};
 }
 
 QString GoogleSettings::clientSecret() const
 {
-    return QStringLiteral("mdT1DjzohxN3npUUzkENT0gO");
+    return {};
 }
 
 bool GoogleSettings::isReady() const
 {
-    return m_isReady;
+    return false;
 }
 
 AccountPtr GoogleSettings::accountPtr()
diff --git a/resources/imap/gmailpasswordrequester.cpp b/resources/imap/gmailpasswordrequester.cpp
index 8d7db8e..9cfa764 100644
--- a/resources/imap/gmailpasswordrequester.cpp
+++ b/resources/imap/gmailpasswordrequester.cpp
@@ -13,8 +13,8 @@
 #include <KGAPI/AccountManager>
 #include <KGAPI/AuthJob>
 
-#define GOOGLE_API_KEY QStringLiteral("554041944266.apps.googleusercontent.com")
-#define GOOGLE_API_SECRET QStringLiteral("mdT1DjzohxN3npUUzkENT0gO")
+#define GOOGLE_API_KEY QStringLiteral("")
+#define GOOGLE_API_SECRET QStringLiteral("")
 
 GmailPasswordRequester::GmailPasswordRequester(ImapResourceBase *resource, QObject *parent)
     : PasswordRequesterInterface(parent)
