diff --git a/src/dolphincontextmenu.cpp b/src/dolphincontextmenu.cpp
index fbc0d75..006c2f5 100644
--- a/src/dolphincontextmenu.cpp
+++ b/src/dolphincontextmenu.cpp
@@ -361,8 +361,7 @@ void DolphinContextMenu::insertDefaultItemActions(const KFileItemListProperties&
     // Insert 'Move to Trash' and/or 'Delete'
     const bool showDeleteAction = (KSharedConfig::openConfig()->group("KDE").readEntry("ShowDeleteCommand", false) ||
                                     !properties.isLocal());
-    const bool showMoveToTrashAction = (properties.isLocal() &&
-                                        properties.supportsMoving());
+    const bool showMoveToTrashAction = false;
 
     if (showDeleteAction && showMoveToTrashAction) {
         delete m_removeAction;
diff --git a/src/panels/folders/treeviewcontextmenu.cpp b/src/panels/folders/treeviewcontextmenu.cpp
index f4181d0..661ba91 100644
--- a/src/panels/folders/treeviewcontextmenu.cpp
+++ b/src/panels/folders/treeviewcontextmenu.cpp
@@ -81,24 +81,10 @@ void TreeViewContextMenu::open(const QPoint& pos)
         KConfigGroup configGroup(globalConfig, "KDE");
         bool showDeleteCommand = configGroup.readEntry("ShowDeleteCommand", false);
 
-        const QUrl url = m_fileItem.url();
-        if (url.isLocalFile()) {
-            QAction* moveToTrashAction = new QAction(QIcon::fromTheme(QStringLiteral("user-trash")),
-                                                    i18nc("@action:inmenu", "Move to Trash"), this);
-            const bool enableMoveToTrash = capabilities.isLocal() && capabilities.supportsMoving();
-            moveToTrashAction->setEnabled(enableMoveToTrash);
-            connect(moveToTrashAction, &QAction::triggered, this, &TreeViewContextMenu::moveToTrash);
-            popup->addAction(moveToTrashAction);
-        } else {
-            showDeleteCommand = true;
-        }
-
-        if (showDeleteCommand) {
-            QAction* deleteAction = new QAction(QIcon::fromTheme(QStringLiteral("edit-delete")), i18nc("@action:inmenu", "Delete"), this);
-            deleteAction->setEnabled(capabilities.supportsDeleting());
-            connect(deleteAction, &QAction::triggered, this, &TreeViewContextMenu::deleteItem);
-            popup->addAction(deleteAction);
-        }
+        QAction* deleteAction = new QAction(QIcon::fromTheme(QStringLiteral("edit-delete")), i18nc("@action:inmenu", "Delete"), this);
+        deleteAction->setEnabled(capabilities.supportsDeleting());
+        connect(deleteAction, &QAction::triggered, this, &TreeViewContextMenu::deleteItem);
+        popup->addAction(deleteAction);
 
         popup->addSeparator();
     }
@@ -192,15 +178,6 @@ void TreeViewContextMenu::rename()
 
 void TreeViewContextMenu::moveToTrash()
 {
-    const QList<QUrl> list{m_fileItem.url()};
-    KIO::JobUiDelegate uiDelegate;
-    uiDelegate.setWindow(m_parent);
-    if (uiDelegate.askDeleteConfirmation(list, KIO::JobUiDelegate::Trash, KIO::JobUiDelegate::DefaultConfirmation)) {
-        KIO::Job* job = KIO::trash(list);
-        KIO::FileUndoManager::self()->recordJob(KIO::FileUndoManager::Trash, list, QUrl(QStringLiteral("trash:/")), job);
-        KJobWidgets::setWindow(job, m_parent);
-        job->uiDelegate()->setAutoErrorHandlingEnabled(true);
-    }
 }
 
 void TreeViewContextMenu::deleteItem()
diff --git a/src/settings/dolphinsettingsdialog.cpp b/src/settings/dolphinsettingsdialog.cpp
index eed2f51..2484e8f 100644
--- a/src/settings/dolphinsettingsdialog.cpp
+++ b/src/settings/dolphinsettingsdialog.cpp
@@ -95,18 +95,6 @@ DolphinSettingsDialog::DolphinSettingsDialog(const QUrl& url, QWidget* parent, K
     contextMenuSettingsFrame->setIcon(QIcon::fromTheme(QStringLiteral("preferences-desktop-menu-edit")));
     connect(contextMenuSettingsPage, &ContextMenuSettingsPage::changed, this, &DolphinSettingsDialog::enableApply);
 
-    // Trash
-    SettingsPageBase* trashSettingsPage = nullptr;
-#ifndef Q_OS_WIN
-    trashSettingsPage = createTrashSettingsPage(this);
-#endif
-    if (trashSettingsPage) {
-        trashSettings = addPage(trashSettingsPage,
-                                                     i18nc("@title:group", "Trash"));
-        trashSettings->setIcon(QIcon::fromTheme(QStringLiteral("user-trash")));
-        connect(trashSettingsPage, &TrashSettingsPage::changed, this, &DolphinSettingsDialog::enableApply);
-    }
-
 #if HAVE_KUSERFEEDBACK
     // User Feedback
     UserFeedbackSettingsPage* feedbackSettingsPage = nullptr;
@@ -123,9 +111,6 @@ DolphinSettingsDialog::DolphinSettingsDialog(const QUrl& url, QWidget* parent, K
     m_pages.append(viewSettingsPage);
     m_pages.append(navigationSettingsPage);
     m_pages.append(contextMenuSettingsPage);
-    if (trashSettingsPage) {
-        m_pages.append(trashSettingsPage);
-    }
 #if HAVE_KUSERFEEDBACK
     if (feedbackSettingsPage) {
         m_pages.append(feedbackSettingsPage);
@@ -217,9 +202,5 @@ void DolphinSettingsDialog::closeEvent(QCloseEvent* event)
 
 SettingsPageBase *DolphinSettingsDialog::createTrashSettingsPage(QWidget *parent)
 {
-    if (!KAuthorized::authorizeControlModule(QStringLiteral("kcmtrash.desktop"))) {
-        return nullptr;
-    }
-
-    return new TrashSettingsPage(parent);
+    return nullptr;
 }
diff --git a/src/settings/trash/trashsettingspage.cpp b/src/settings/trash/trashsettingspage.cpp
index 734762a..b6fca4e 100644
--- a/src/settings/trash/trashsettingspage.cpp
+++ b/src/settings/trash/trashsettingspage.cpp
@@ -14,14 +14,6 @@
 TrashSettingsPage::TrashSettingsPage(QWidget* parent) :
         SettingsPageBase(parent)
 {
-    QFormLayout* topLayout = new QFormLayout(this);
-
-    m_proxy = new KCModuleProxy(KPluginMetaData(QStringLiteral("kcm_trash")));
-    topLayout->addRow(m_proxy);
-
-    loadSettings();
-
-    connect(m_proxy, &KCModuleProxy::changed, this, &TrashSettingsPage::changed);
 }
 
 TrashSettingsPage::~TrashSettingsPage()
@@ -30,16 +22,13 @@ TrashSettingsPage::~TrashSettingsPage()
 
 void TrashSettingsPage::applySettings()
 {
-    m_proxy->save();
 }
 
 void TrashSettingsPage::restoreDefaults()
 {
-    m_proxy->defaults();
 }
 
 void TrashSettingsPage::loadSettings()
 {
-    m_proxy->load();
 }
 
diff --git a/src/views/viewproperties.cpp b/src/views/viewproperties.cpp
index e6dbcd8..7a21367 100644
--- a/src/views/viewproperties.cpp
+++ b/src/views/viewproperties.cpp
@@ -50,9 +50,6 @@ ViewProperties::ViewProperties(const QUrl& url) :
     } else if (url.scheme().contains(QLatin1String("search"))) {
         m_filePath = destinationDir(QStringLiteral("search/")) + directoryHashForUrl(url);
         useSearchView = true;
-    } else if (url.scheme() == QLatin1String("trash")) {
-        m_filePath = destinationDir(QStringLiteral("trash"));
-        useTrashView = true;
     } else if (url.scheme() == QLatin1String("recentdocuments")) {
         m_filePath = destinationDir(QStringLiteral("recentdocuments"));
         useRecentDocumentsView = true;
@@ -119,9 +116,6 @@ ViewProperties::ViewProperties(const QUrl& url) :
                 setViewMode(DolphinView::DetailsView);
                 setVisibleRoles({"text", "path", "modificationtime"});
             }
-        } else if (useTrashView) {
-            setViewMode(DolphinView::DetailsView);
-            setVisibleRoles({"text", "path", "deletiontime"});
         } else if (useRecentDocumentsView || useDownloadsView) {
             setSortRole(QByteArrayLiteral("modificationtime"));
             setSortOrder(Qt::DescendingOrder);
