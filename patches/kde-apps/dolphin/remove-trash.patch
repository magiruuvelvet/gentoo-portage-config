diff --git a/src/dolphincontextmenu.cpp b/src/dolphincontextmenu.cpp
index 354111a..bda5bae 100644
--- a/src/dolphincontextmenu.cpp
+++ b/src/dolphincontextmenu.cpp
@@ -391,7 +391,7 @@ void DolphinContextMenu::insertDefaultItemActions(const KFileItemListProperties
 
     // Insert 'Move to Trash' and/or 'Delete'
     const bool showDeleteAction = (KSharedConfig::openConfig()->group(QStringLiteral("KDE")).readEntry("ShowDeleteCommand", false) || !properties.isLocal());
-    const bool showMoveToTrashAction = (properties.isLocal() && properties.supportsMoving());
+    const bool showMoveToTrashAction = false;
 
     if (showDeleteAction && showMoveToTrashAction) {
         delete m_removeAction;
diff --git a/src/panels/folders/treeviewcontextmenu.cpp b/src/panels/folders/treeviewcontextmenu.cpp
index ec1ccb4..4339769 100644
--- a/src/panels/folders/treeviewcontextmenu.cpp
+++ b/src/panels/folders/treeviewcontextmenu.cpp
@@ -78,23 +78,10 @@ void TreeViewContextMenu::open(const QPoint &pos)
         KConfigGroup configGroup(globalConfig, QStringLiteral("KDE"));
         bool showDeleteCommand = configGroup.readEntry("ShowDeleteCommand", false);
 
-        const QUrl url = m_fileItem.url();
-        if (url.isLocalFile()) {
-            QAction *moveToTrashAction = new QAction(QIcon::fromTheme(QStringLiteral("user-trash")), i18nc("@action:inmenu", "Move to Trash"), this);
-            const bool enableMoveToTrash = capabilities.isLocal() && capabilities.supportsMoving();
-            moveToTrashAction->setEnabled(enableMoveToTrash);
-            connect(moveToTrashAction, &QAction::triggered, this, &TreeViewContextMenu::moveToTrash);
-            popup->addAction(moveToTrashAction);
-        } else {
-            showDeleteCommand = true;
-        }
-
-        if (showDeleteCommand) {
-            QAction *deleteAction = new QAction(QIcon::fromTheme(QStringLiteral("edit-delete")), i18nc("@action:inmenu", "Delete"), this);
-            deleteAction->setEnabled(capabilities.supportsDeleting());
-            connect(deleteAction, &QAction::triggered, this, &TreeViewContextMenu::deleteItem);
-            popup->addAction(deleteAction);
-        }
+        QAction *deleteAction = new QAction(QIcon::fromTheme(QStringLiteral("edit-delete")), i18nc("@action:inmenu", "Delete"), this);
+        deleteAction->setEnabled(capabilities.supportsDeleting());
+        connect(deleteAction, &QAction::triggered, this, &TreeViewContextMenu::deleteItem);
+        popup->addAction(deleteAction);
 
         popup->addSeparator();
     }
@@ -189,9 +176,6 @@ void TreeViewContextMenu::rename()
 
 void TreeViewContextMenu::moveToTrash()
 {
-    using Iface = KIO::AskUserActionInterface;
-    auto *deleteJob = new KIO::DeleteOrTrashJob(QList{m_fileItem.url()}, Iface::Trash, Iface::DefaultConfirmation, m_parent);
-    deleteJob->start();
 }
 
 void TreeViewContextMenu::deleteItem()
diff --git a/src/settings/dolphinsettingsdialog.cpp b/src/settings/dolphinsettingsdialog.cpp
index 6410d96..904cdea 100644
--- a/src/settings/dolphinsettingsdialog.cpp
+++ b/src/settings/dolphinsettingsdialog.cpp
@@ -71,17 +71,6 @@ DolphinSettingsDialog::DolphinSettingsDialog(const QUrl &url, QWidget *parent, K
     contextMenuSettingsFrame->setIcon(QIcon::fromTheme(QStringLiteral("preferences-desktop-menu-edit")));
     connect(contextMenuSettingsPage, &ContextMenuSettingsPage::changed, this, &DolphinSettingsDialog::enableApply);
 
-    // Trash
-    SettingsPageBase *trashSettingsPage = nullptr;
-#ifndef Q_OS_WIN
-    trashSettingsPage = createTrashSettingsPage(this);
-#endif
-    if (trashSettingsPage) {
-        trashSettings = addPage(trashSettingsPage, i18nc("@title:group", "Trash"));
-        trashSettings->setIcon(QIcon::fromTheme(QStringLiteral("user-trash")));
-        connect(trashSettingsPage, &TrashSettingsPage::changed, this, &DolphinSettingsDialog::enableApply);
-    }
-
 #if HAVE_KUSERFEEDBACK
     // User Feedback
     UserFeedbackSettingsPage *feedbackSettingsPage = nullptr;
@@ -96,9 +85,6 @@ DolphinSettingsDialog::DolphinSettingsDialog(const QUrl &url, QWidget *parent, K
     m_pages.append(interfaceSettingsPage);
     m_pages.append(viewSettingsPage);
     m_pages.append(contextMenuSettingsPage);
-    if (trashSettingsPage) {
-        m_pages.append(trashSettingsPage);
-    }
 #if HAVE_KUSERFEEDBACK
     if (feedbackSettingsPage) {
         m_pages.append(feedbackSettingsPage);
@@ -187,11 +173,7 @@ void DolphinSettingsDialog::closeEvent(QCloseEvent *event)
 
 SettingsPageBase *DolphinSettingsDialog::createTrashSettingsPage(QWidget *parent)
 {
-    if (!KAuthorized::authorizeControlModule(QStringLiteral("kcmtrash.desktop"))) {
-        return nullptr;
-    }
-
-    return new TrashSettingsPage(parent);
+    return nullptr;
 }
 
 #include "moc_dolphinsettingsdialog.cpp"
diff --git a/src/settings/trash/trashsettingspage.cpp b/src/settings/trash/trashsettingspage.cpp
index 38a3d08..8f6357f 100644
--- a/src/settings/trash/trashsettingspage.cpp
+++ b/src/settings/trash/trashsettingspage.cpp
@@ -15,15 +15,6 @@
 TrashSettingsPage::TrashSettingsPage(QWidget *parent)
     : SettingsPageBase(parent)
 {
-    QFormLayout *topLayout = new QFormLayout(this);
-
-    m_kcm = KCModuleLoader::loadModule(KPluginMetaData(QStringLiteral("kcm_trash")));
-
-    topLayout->addRow(m_kcm->widget());
-
-    loadSettings();
-
-    connect(m_kcm, &KCModule::needsSaveChanged, this, &TrashSettingsPage::changed);
 }
 
 TrashSettingsPage::~TrashSettingsPage()
@@ -32,17 +23,14 @@ TrashSettingsPage::~TrashSettingsPage()
 
 void TrashSettingsPage::applySettings()
 {
-    m_kcm->save();
 }
 
 void TrashSettingsPage::restoreDefaults()
 {
-    m_kcm->defaults();
 }
 
 void TrashSettingsPage::loadSettings()
 {
-    m_kcm->load();
 }
 
 #include "moc_trashsettingspage.cpp"
diff --git a/src/views/viewproperties.cpp b/src/views/viewproperties.cpp
index 99a6bb3..35e6e0a 100644
--- a/src/views/viewproperties.cpp
+++ b/src/views/viewproperties.cpp
@@ -119,9 +119,6 @@ ViewProperties::ViewProperties(const QUrl &url)
     if (url.scheme().contains(QLatin1String("search"))) {
         m_filePath = destinationDir(QStringLiteral("search/")) + directoryHashForUrl(url);
         useSearchView = true;
-    } else if (url.scheme() == QLatin1String("trash")) {
-        m_filePath = destinationDir(QStringLiteral("trash"));
-        useTrashView = true;
     } else if (url.scheme() == QLatin1String("recentlyused")) {
         m_filePath = destinationDir(QStringLiteral("recentlyused"));
         useRecentDocumentsView = true;
@@ -194,9 +191,6 @@ ViewProperties::ViewProperties(const QUrl &url)
                 setViewMode(DolphinView::DetailsView);
                 setVisibleRoles({"text", "path", "modificationtime"});
             }
-        } else if (useTrashView) {
-            setViewMode(DolphinView::DetailsView);
-            setVisibleRoles({"text", "path", "deletiontime"});
         } else if (useRecentDocumentsView || useDownloadsView) {
             setSortOrder(Qt::DescendingOrder);
             setSortFoldersFirst(false);
