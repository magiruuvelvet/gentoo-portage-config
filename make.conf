GENTOO_MIRRORS="http://distfiles.gentoo.org"

# always ask by default every time, don't "automate" stuff
# never attempt to automatically change package masks or keywords
EMERGE_DEFAULT_OPTS="${EMERGE_DEFAULT_OPTS} --ask --autounmask-keep-masks"

# enable parallel fetch of packages
FEATURES="${FEATURES} parallel-fetch"

# disable man pages by default, only enable for programs I care enough
FEATURES="${FEATURES} noman"

# use clang as default compiler
USE="clang"
CC="clang"
CXX="clang++"
CPP="clang-cpp"
# DON'T SET THESE VARIABLES!!! (breaks toolchain functions for multilib, leading to missing -m32 argument)
# HOSTCC="clang"
# HOSTCXX="clang++"
# HOSTCPP="clang-cpp"
# BUILDCC="clang"
# BUILDCXX="clang++"
# BUILDCPP="clang-cpp"
# HOST_CC="clang"
# HOST_CXX="clang++"
# HOST_CPP="clang-cpp"
AR="llvm-ar"
NM="llvm-nm"
RANLIB="llvm-ranlib"
OBJCOPY="llvm-objcopy"
OBJDUMP="llvm-objdump"
READELF="llvm-readelf"
STRIP="llvm-strip"
STRINGS="llvm-strings"
ADDR2LINE="llvm-symbolizer"
SIZE="llvm-size"

# use gcc only for unsupported packages (like linux kernel)
# env/gnu-gcc.conf

# set default compiler flags
COMMON_FLAGS="-march=x86-64 -mtune=generic -O2 -pipe -fdiagnostics-color=always"
CFLAGS="${COMMON_FLAGS}"
CXXFLAGS="${COMMON_FLAGS}"
FCFLAGS="${COMMON_FLAGS}"
FFLAGS="${COMMON_FLAGS}"

# set default qmake profile for Qt-based applications
QMAKESPEC="linux-clang-libc++"

# debugging helpers, while maintaining an optimized release build without assertions
# nostrip.conf      <- doesn't strip binaries, increases ELF size and memory usage
# splitdebug.conf   <- separate debugging symbols when they are needed

# default locations
PORTDIR="/usr/portage"
DISTDIR="/usr/portage/distfiles"
PKGDIR="/usr/portage/packages"

# set default make opts
# don't waste all system resources - native thread count is 16
MAKEOPTS="-j6"

# allow everything (what is a license? xD)
ACCEPT_LICENSE="*"

# allow all keywords
ACCEPT_KEYWORDS="~amd64 ~x86 *"

# set default languages
LINGUAS="ja en_US en"
L10N="ja en-US en"

# cpu features (copy-paste of /proc/cpuinfo flags)
CPU_FLAGS_X86="fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse mmxext sse2 sse3 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma fma3 cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm cpuid_fault epb invpcid_single pti ssbd ibrs ibpb stibp tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt dtherm ida arat pln pts md_clear flush_l1d"

# available GPUs and supported drivers
VIDEO_CARDS="amdgpu radeon radeonsi"

# available and supported input devices
INPUT_DEVICES="keyboard libinput mouse joystick synaptics wacom"

# default target triplet
CHOST="x86_64-pc-linux"
CHOST_x86="i686-pc-linux"
CHOST_amd64="x86_64-pc-linux"

# default build target triplet
CBUILD="x86_64-pc-linux"
CBUILD_x86="i686-pc-linux"
CBUILD_amd64="x86_64-pc-linux"
